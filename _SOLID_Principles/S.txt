1. Single Responsibility Principle (SRP)


Definition: A class should have only one reason to change, meaning it should only have one responsibility or job.
----------------------------------------------------------------------------------------------------------------------------------------------------------------
Non-SOLID: 

public class Employee{
  public String getDesignation(int employeeID){ // }
  public void updateSalary(int employeeID){ // }
  public void sendMail(){ // }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------
In the above example, the Employee class has a few employee class-specific behaviors like getDesignation & updateSalary.
Additionally, it also has another method named sendMail which deviates from the responsibility of the Employee class.

This behavior is not specific to this class, and having it violates the single responsibility principle. 
To overcome this, you can move the sendMail method to a separate class.
----------------------------------------------------------------------------------------------------------------------------------------------------------------
SOLID Code:

public class Employee{
  public String getDesignation(int employeeID){ // }
  public void updateSalary(int employeeID){ // }
}

public class NotificationService {
    public void sendMail() { // }
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------
